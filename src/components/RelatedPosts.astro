---
import { getCollection } from 'astro:content';
import { compareDesc } from 'date-fns';
import type { CollectionEntry } from 'astro:content';

interface Props {
  currentSlug: string;
  tags: string[];
  limit?: number;
}

const { currentSlug, tags, limit = 2 } = Astro.props;

// Get all blog posts
const allPosts = await getCollection('blog', ({ data }) => {
  return !data.draft;
});

// Sort by date
const sortedPosts = allPosts.sort((a, b) => 
  compareDesc(new Date(a.data.pubDate), new Date(b.data.pubDate))
);

// Filter out current post and find related by tags
const relatedPosts = sortedPosts
  .filter(post => post.slug !== currentSlug)
  .filter(post => {
    const postTags = post.data.tags || [];
    return postTags.some(tag => tags.includes(tag));
  })
  .slice(0, limit);

// If we don't have enough related posts, add recent posts
let postsToShow = [...relatedPosts];
if (postsToShow.length < limit) {
  const recentPosts = sortedPosts
    .filter(post => post.slug !== currentSlug && !postsToShow.includes(post))
    .slice(0, limit - postsToShow.length);
  
  postsToShow = [...postsToShow, ...recentPosts];
}
---
<div>
    {postsToShow.length > 0 && (
    <div class="mt-12 rounded-lg border border-gray-200 bg-white p-6 animate-fade-in">
        <h2 class="mb-6 text-xl font-bold">Related Posts</h2>
        <div class="grid gap-6 sm:grid-cols-2">
        {postsToShow.map((post: CollectionEntry<'blog'>) => (
            <a href={`/blog/${post.slug}`} class="group block overflow-hidden rounded-lg border border-gray-100 hover:text-emerald-500 transition-shadow hover:shadow-md">
            <div class="relative aspect-video w-full overflow-hidden">
                {post.data.image ? (
                <img 
                    src={post.data.image} 
                    alt={post.data.title} 
                    class="h-full w-full object-cover transition-transform duration-300 group-hover:scale-105" 
                />
                ) : (
                <div class="flex h-full w-full items-center justify-center bg-gray-100">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-10 w-10 text-gray-300">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 15.75l5.159-5.159a2.25 2.25 0 013.182 0l5.159 5.159m-1.5-1.5l1.409-1.409a2.25 2.25 0 013.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 001.5-1.5V6a1.5 1.5 0 00-1.5-1.5H3.75A1.5 1.5 0 002.25 6v12a1.5 1.5 0 001.5 1.5zm10.5-11.25h.008v.008h-.008V8.25zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z" />
                    </svg>
                </div>
                )}
            </div>
            <div class="p-4">
                <h3 class="font-medium group-hover:text-primary-600">{post.data.title}</h3>
                <p class="mt-1 text-sm text-gray-600 line-clamp-2">{post.data.description}</p>
            </div>
            </a>
        ))}
        </div>
    </div>
    )}
</div>